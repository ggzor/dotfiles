{
  // Experimental configuration
  "editor.wordBasedSuggestions": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "editor.guides.highlightActiveIndentation": true,
  "editor.guides.bracketPairs": true,
  "editor.detectIndentation": true,
  //
  // Edition Settings
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "[sql]": {
    "editor.formatOnSave": false
  },
  "editor.tabSize": 2,
  "editor.suggestSelection": "first",
  "editor.wordWrapColumn": 90,
  //
  // Debugging settings
  "debug.inlineValues": true,
  //
  // Visual settings
  "workbench.colorTheme": "Night Owl",
  "editor.fontFamily": "'JetBrainsMono Nerd Font', 'monospace', monospace",
  //
  "editor.bracketPairColorization.enabled": true,
  "editor.cursorBlinking": "phase",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.fontLigatures": false,
  "editor.minimap.enabled": false,
  "window.dialogStyle": "custom",
  //
  // Better with a tiling window manager
  "window.titleBarStyle": "native",
  "workbench.activityBar.visible": false,
  //
  // Cleaner vscode
  "workbench.sideBar.location": "right",
  "window.menuBarVisibility": "toggle",
  "workbench.startupEditor": "none",
  "breadcrumbs.enabled": false,
  "editor.scrollbar.verticalScrollbarSize": 0,
  "editor.hideCursorInOverviewRuler": true,
  "[python]": {
    "editor.tabSize": 4,
  },
  "git.confirmSync": false,
  "git.autofetch": true,
  //
  // Exclude files from tree
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "**/*.olean": true
  },
  //
  // Terminal
  "terminal.integrated.allowChords": false,
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.profiles.linux": {
    "zsh": {
      "path": "/usr/bin/zsh"
    },
  },
  //
  // Extensions
  //
  // Intellicode
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  //
  // Haskell
  "haskell.formattingProvider": "ormolu",
  "[haskell]": {
    // Has to format complete file
    "editor.formatOnSaveMode": "file"
  },
  //
  // Java
  "java.refactor.renameFromFileExplorer": "autoApply",
  //
  // Python
  "jupyter.insidersChannel": "weekly",
  "jupyter.askForKernelRestart": false,
  "python.showStartPage": false,
  "jupyter.interactiveWindowMode": "perFile",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "python.insidersChannel": "weekly",
  "python.languageServer": "Pylance",
  //
  // Idris
  "idris.idris2Mode": true,
  "idris.idrisPath": "idris2",
  //
  // VIM
  "vim.changeWordIncludesWhitespace": true,
  "vim.easymotion": true,
  "vim.easymotionKeys": "aeiousdfjl",
  "vim.leader": " ",
  "vim.replaceWithRegister": true,
  "vim.surround": true,
  "vim.visualstar": true,
  //
  // Required for remapped esc to work
  "keyboard.dispatch": "keyCode",
  "vim.handleKeys": {
    "<C-f>": false
  },
  //
  // Mappings at the end, too noisy
  // Don't look after this line, it's really ugly to make
  // vscode work like vim :(
  "vim.normalModeKeyBindingsNonRecursive": [
    // Show hover
    {
      "before": [
        "ñ",
        "k"
      ],
      "after": [
        "g",
        "h"
      ]
    },
    {
      "before": [
        "ñ",
        "q"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "ñ",
        "s"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "ñ",
        "ñ"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "before": [
        "<leader>",
        "r"
      ],
      "commands": [
        "editor.action.rename"
      ]
    },
    {
      "before": [
        "ñ",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<C-l>"
      ],
      "commands": [
        "workbench.action.navigateRight"
      ]
    },
    {
      "before": [
        "<C-h>"
      ],
      "commands": [
        "workbench.action.navigateLeft"
      ]
    },
    {
      "before": [
        "<C-k>"
      ],
      "commands": [
        "workbench.action.navigateUp"
      ]
    },
    {
      "before": [
        "<C-j>"
      ],
      "commands": [
        "workbench.action.navigateDown"
      ]
    },
    // Replace with register (similar to vim subversive)
    {
      "before": [
        "s"
      ],
      "after": [
        "\"",
        "\"",
        "g",
        "r"
      ]
    },
    // surround
    {
      "before": [
        "ñ",
        "i"
      ],
      "after": [
        "y",
        "s"
      ]
    },
    {
      "before": [
        "ñ",
        "d"
      ],
      "after": [
        "d",
        "s"
      ]
    },
    {
      "before": [
        "ñ",
        "r"
      ],
      "after": [
        "c",
        "s"
      ]
    },
    // easymotion
    {
      "before": [
        "<leader>",
        "f"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "f"
      ]
    },
    {
      "before": [
        "<leader>",
        "F"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "F"
      ]
    },
    {
      "before": [
        "<leader>",
        "t"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "t"
      ]
    },
    {
      "before": [
        "<leader>",
        "T"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "T"
      ]
    },
    {
      "before": [
        "ñ",
        "b"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "b"
      ]
    },
    {
      "before": [
        "ñ",
        "w"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "w"
      ]
    },
    {
      "before": [
        "ñ",
        "e"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "e"
      ]
    },
    {
      "before": [
        "ñ",
        "g",
        "e"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "g",
        "e"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "j"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // surround
    {
      "before": [
        "ñ",
        "i"
      ],
      "after": [
        "S"
      ]
    },
    // easymotion but in visual mode
    {
      "before": [
        "<leader>",
        "f"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "f"
      ]
    },
    {
      "before": [
        "ñ",
        "F"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "F"
      ]
    },
    {
      "before": [
        "ñ",
        "t"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "t"
      ]
    },
    {
      "before": [
        "ñ",
        "T"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "T"
      ]
    },
    {
      "before": [
        "ñ",
        "b"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "b"
      ]
    },
    {
      "before": [
        "ñ",
        "w"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "w"
      ]
    },
    {
      "before": [
        "ñ",
        "e"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "e"
      ]
    },
    {
      "before": [
        "ñ",
        "g",
        "e"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "g",
        "e"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "j"
      ]
    }
  ],
  "mssql.connections": [],
}
